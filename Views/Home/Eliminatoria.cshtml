<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Torneio de Eliminatórias</title>
    <style>
        coiso {
            font-family: 'Arial', sans-serif;
            justify-content: center;
            align-items: center;
        }

        .First {
            background-color: darkgray;
            color: white;
            font-size: 30px;
            border-radius: 6px;
            padding: 5px;
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #333;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        label {
            margin-bottom: 5px;
            color: #555;
        }

        input[type="number"],
        select {
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 100%;
        }

        button {
            padding: 10px 20px;
            background-color: darkgray;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            button:hover {
                background-color: darkgray;
            }

        #torneio {
            margin-top: 30px;
        }

        .rodada {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            margin-bottom: 30px;
            border-bottom: 1px solid #ccc;
            padding-bottom: 20px;
        }


        .jogo {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .jogador {
            flex-grow: 1;
        }

        .linha {
            width: 1px;
            height: 20px;
            background-color: #333;
            margin: 0 10px;
        }

        .vencedor {
            font-weight: bold;
            color: green;
        }

            .vencedor::after {
                content: " (Vencedor)";
            }
    </style>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        var nomesPreenchidos = false; // Adicionando uma variável de controle

        var spreadsheetUrl = 'https://docs.google.com/spreadsheets/d/1pJj9lXHHE-WgDh9P-9JhUp6NGMOrIRdxhZQ8Gs9MHow/edit?usp=sharing';

        function fetchPlayerNames(url, callback) {
            google.charts.load('current', { packages: ['corechart', 'table'] });
            google.charts.setOnLoadCallback(function () {
                var query = new google.visualization.Query(url.replace('/edit', '/gviz/tq'));
                query.setQuery('SELECT A');
                query.send(function (response) {
                    if (response.isError()) {
                        console.error('Error fetching data:', response.getMessage());
                        return;
                    }
                    var data = response.getDataTable();
                    var jogadores = [];
                    for (var i = 0; i < data.getNumberOfRows(); i++) {
                        jogadores.push(data.getValue(i, 0));
                    }
                    callback(jogadores);
                });
            });
        }

        function preencherNomes() {
            const numJogadoresInput = document.getElementById('numJogadores');
            const numJogadores = parseInt(numJogadoresInput.value);
            if (isNaN(numJogadores) || numJogadores < 2 || numJogadores > 64 || numJogadores % 2 !== 0) {
                alert('Por favor, insira um número par de jogadores entre 2 e 64.');
                return;
            }

            // Desabilitar o campo de entrada após a seleção
            numJogadoresInput.disabled = true;

            fetchPlayerNames(spreadsheetUrl, function (jogadores) {
                const nomesDiv = document.getElementById('nomesJogadores');
                nomesDiv.innerHTML = '';

                for (let i = 0; i < numJogadores; i++) {
                    nomesDiv.innerHTML += `
                                        <select id="jogador${i}" onchange="atualizarSelecoes()">
                                            <option value="">Selecione um jogador</option>
                                            ${jogadores.map(jogador => `<option value="${jogador}">${jogador}</option>`).join('')}
                                        </select>
                                        <br>
                                    `;
                }

                nomesDiv.style.display = 'block';
                nomesPreenchidos = true; // Marcando que os nomes foram preenchidos
                document.getElementById('preencherNomesBtn').style.display = 'none'; // Esconde o botão "Preencher Nomes"
            });
        }

        function atualizarSelecoes() {
            const selects = document.querySelectorAll('#nomesJogadores select');
            const selecionados = Array.from(selects).map(select => select.value).filter(value => value !== '');

            selects.forEach(select => {
                const options = select.querySelectorAll('option');
                options.forEach(option => {
                    if (selecionados.includes(option.value) && option.value !== select.value) {
                        option.disabled = true;
                    } else {
                        option.disabled = false;
                    }
                });
            });
        }

        function gerarTorneio() {
            const numJogadores = parseInt(document.getElementById('numJogadores').value);
            if (isNaN(numJogadores) || numJogadores < 2 || numJogadores > 64 || numJogadores % 2 !== 0) {
                alert('Por favor, insira um número par de jogadores entre 2 e 64.');
                return;
            }

            if (!nomesPreenchidos) { // Verifica se os nomes dos jogadores foram preenchidos
                preencherNomes(); // Se não foram preenchidos, preenche-os
                return; // Retorna para evitar gerar o torneio até que os nomes sejam preenchidos
            }

            const nomesDiv = document.getElementById('nomesJogadores');
            const selects = nomesDiv.querySelectorAll('select');
            const nomesJogadores = [];
            selects.forEach(select => {
                if (select.value) {
                    nomesJogadores.push(select.value);
                }
            });

            if (nomesJogadores.length !== numJogadores) {
                alert('Por favor, selecione todos os jogadores.');
                return;
            }

            const setupDiv = document.getElementById('setup');
            setupDiv.style.display = 'none';

            const torneioDiv = document.getElementById('torneio');
            torneioDiv.innerHTML = '';
            torneioDiv.style.display = 'block';

            gerarRodada(torneioDiv, nomesJogadores, 1);
        }

        function exibirVencedorFinal(vencedor) {
            const torneioDiv = document.getElementById('torneio');
            torneioDiv.innerHTML = '';
            const vencedorDiv = document.createElement('div');
            vencedorDiv.style.display = 'flex';
            vencedorDiv.style.alignItems = 'center';
            vencedorDiv.style.justifyContent = 'center';
            vencedorDiv.innerHTML = `
                        <div style="text-align: center;">
                        <img src="/Fotos/medalha.png" style="margin-bottom: 10px;">
                        <p><strong>Vencedor ${vencedor}</strong></p>
                        </div>
                    `;
            torneioDiv.appendChild(vencedorDiv);
        }

        function gerarRodada(parentDiv, jogadores, rodada) {
            const rodadaDiv = document.createElement('div');
            rodadaDiv.className = 'rodada';
            rodadaDiv.innerHTML = `<h3>Rodada ${rodada}</h3>`;
            parentDiv.appendChild(rodadaDiv);

            if (jogadores.length === 1) {
                exibirVencedorFinal(jogadores[0]);
                return;
            }

            const proximaRodada = [];
            for (let i = 0; i < jogadores.length; i += 2) {
                const jogoDiv = document.createElement('div');
                jogoDiv.className = 'jogo';

                const jogador1 = jogadores[i];
                const jogador2 = jogadores[i + 1];

                jogoDiv.innerHTML = `
                            <div class="jogador">
                                ${jogador1}
                                <button onclick="selecionarVencedor('${jogador1}', ${rodada}, this)">Selecionar</button>
                            </div>
                            <div class="linha"></div>
                            <div class="jogador">
                                ${jogador2}
                                <button onclick="selecionarVencedor('${jogador2}', ${rodada}, this)">Selecionar</button>
                            </div>
                        `;
                rodadaDiv.appendChild(jogoDiv);
            }

            rodadaDiv.dataset.proximaRodada = JSON.stringify(proximaRodada);
        }

        function selecionarVencedor(jogador, rodada, botao) {
            const jogoDiv = botao.parentNode.parentNode;
            const rodadaDiv = jogoDiv.parentNode;
            const proximaRodada = JSON.parse(rodadaDiv.dataset.proximaRodada);

            proximaRodada.push(jogador);
            rodadaDiv.dataset.proximaRodada = JSON.stringify(proximaRodada);

            jogoDiv.querySelectorAll('button').forEach(btn => btn.style.display = 'none'); // Esconde os botões
            jogoDiv.querySelectorAll('.jogador').forEach(jogadorDiv => {
                if (jogadorDiv.innerText.includes(jogador)) {
                    jogadorDiv.innerHTML += ' <strong>Vencedor</strong>';
                }
            });

            if (proximaRodada.length === rodadaDiv.querySelectorAll('.jogo').length) {
                gerarRodada(rodadaDiv.parentNode, proximaRodada, rodada + 1);
            }
        }
    </script>
</head>
<coiso>
    <div class="Link_Style">
        <label> <a target="_blank" class="First" href="https://docs.google.com/spreadsheets/d/1pJj9lXHHE-WgDh9P-9JhUp6NGMOrIRdxhZQ8Gs9MHow/edit?usp=sharing">Lista de Jogadores</a></label>
    </div>
    <div class="container" id="setup">
        <h1>Criar Torneio</h1>
        <label for="numJogadores">Número de Jogadores do Torneio:</label>
        <input type="number" id="numJogadores" min="2" max="64" step="2">
        <button id="preencherNomesBtn" onclick="preencherNomes()">Continuar</button>
        <div id="nomesJogadores" style="display: none;"></div>
        <button onclick="gerarTorneio()">Criar Torneio</button>
    </div>
    <div class="container" id="torneio" style="display: none;"></div>
</coiso>
</html>

